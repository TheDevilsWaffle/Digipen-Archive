///////////////////////////////////////////////////////////////////////////////////////////////////
//AUTHOR — Travis Moore
//SCRIPT — ButtonHoverFill.cs
//COPYRIGHT — © 2017 DigiPen Institute of Technology
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma warning disable 0169
#pragma warning disable 0649

using UnityEngine;
using System.Collections;
//using System.Collections.Generic;
using UnityEngine.UI;

#region ENUMS

#endregion

#region EVENTS

#endregion

public class ButtonHoverFill : ButtonActionBase
{
    #region FIELDS
    [SerializeField]
    float time;
    [SerializeField]
    LeanTweenType ease = LeanTweenType.easeInBack;

    Image img;
    #endregion

    #region INITIALIZATION
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>
    /// Awake()
    /// </summary>
    ///////////////////////////////////////////////////////////////////////////////////////////////
    void Awake()
    {
        img = transform.GetComponentInParent<Image>();
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>
    /// Start()
    /// </summary>
    ///////////////////////////////////////////////////////////////////////////////////////////////
    void Start()
    {
    
    }
    #endregion

    #region UPDATE
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>
    /// Update()
    /// </summary>
    ///////////////////////////////////////////////////////////////////////////////////////////////
    void Update()
    {
    
    }
    #endregion

    #region PUBLIC METHODS
    ///////////////////////////////////////////////////////////////////////////////////////////////
    public override void Inactive()
    {
        base.Inactive();
        float _currentValue = img.fillAmount;
        LeanTween.value(this.gameObject, UpdateFillValue, _currentValue, 0.02f, time)
            .setEase(ease)
            .setIgnoreTimeScale(true);
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////
    public override void Hover()
    {
        base.Hover();
        float _currentValue = 0.02f;
        LeanTween.value(this.gameObject, UpdateFillValue, _currentValue, 1f, time)
            .setEase(ease)
            .setIgnoreTimeScale(true);
    }
    void UpdateFillValue(float _value)
    {
        if(img != null)
            img.fillAmount = _value;
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////
    #endregion

    #region PRIVATE METHODS
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////////////////////////
    #endregion

    #region OnDestroy
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>
    /// OnDestroy()
    /// </summary>
    ///////////////////////////////////////////////////////////////////////////////////////////////
    void OnDestroy()
    {
        //remove listeners
    }
    #endregion
}

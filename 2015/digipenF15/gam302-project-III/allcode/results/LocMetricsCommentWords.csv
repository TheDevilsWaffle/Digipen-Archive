Word,Count
/////////////////////////////////////////////////////////////////////////,304
the,186
-,170
//FUNCTION:,101
=,100
to,98
of,93
//NOTE:,89
not,77
but,71
used,67
Â©2015,54
//SCRIPT,54
//COPYRIGHT,54
DigiPen,54
Institute,54
Technology,54
//AUTHOR,54
+,51
this,47
if,46
assigned,46
variable,45
is,44
*,41
for,36
we,30
and,30
\"\\,26
private,26
in,26
},25
{,25
new,25
on,24
set,23
object,23
Travis,23
declared,22
field,22
once,21
a,21
vector,21
Moore,21
moveVec,21
Start(),19
Vector3,19
PROPERTIES,18
camera,18
Update,18
frame,18
per,17
called,17
get,17
Use,16
Lindsay,15
Auston,15
initialization,15
update,14
true;,14
/,13
<,13
it,13
float,13
force,13
from,13
are,13
&&,12
>=,12
that,12
position,12
\Vector3(moveX,\,11
Update(),11
be,11
movement,11
DEBUG,10
Enrique,10
or,10
player,10
Rodriguez,10
health,10
check,10
else,10
our,9
planet,9
out,8
\moveY,\,8
Transforming,8
\0f,\,8
should,8
will,8
angle,8
at,8
actions,8
ground,7
character,7
distance,7
see,7
false;,7
reset,7
timer,7
use,7
value,7
this.IsGrounded,7
random,7
Get,7
we're,7
state,7
moveY);,6
target,6
If,6
transform,6
assign,6
don't,6
CODE,6
this.gameObject.GetComponent<MovementController>().IsDisabled,6
move,6
into,6
call,6
ClampHealth(),6
need,6
Getting,6
inside,6
nothing,6
main,6
FUTURE,6
menu,6
0f);,6
height,6
surface,6
down,6
hud,6
NEEDED,6
90),6
/////////////////////////////////////////////////////////////////////////////,6
looking,6
HUD,5
&,5
care,5
float),5
forces,5
GameObject,5
button,5
local,5
an,5
keep,5
\Vector3,\,5
object's,5
about,5
so,5
destroy,5
no,5
z,5
game,5
void,5
disabled,5
up,5
right,5
make,5
before,5
correct,5
original,5
Vector3),5
shoot,5
world,5
axis,5
\result.distance,\,5
with,5
0,5
return,5
//PURPOSE:,5
back,5
apply,5
start,5
(),5
\Color.red,\,4
(AngleDiffX,4
create,4
<=,4
y,4
BoomVec,4
damage,4
point,4
135,4
\Debug.DrawLine(myPosition,\,4
x,4
conversion,4
bullet,4
AngleDiffY,4
between,4
\Debug.Log("\value_\,4
\float,\,4
suction,4
returning,4
how,4
center,4
can,4
toggle,4
relative,4
AngleDiffX,4
velocity,4
Fernando,4
LookAt(RandomDirection(MaxTurn,4
space,4
non-state-dependent,4
(AngleDiffY,4
45,4
does,4
forward,4
sure,4
Start,4
onto,4
(because,4
ensure,4
based,4
direction,4
[SerializeField],4
true);,4
Calls,4
(angle,4
myPosition,4
POS,4
sample,4
90,4
value_);,4
DestroyOwner(),4
state-dependent,4
pos,4
Zeroing,4
positive,4
CurrentHP,4
project,4
Lima,4
planetoid,4
Time.deltaTime,4
//////////////////////////////////////////////////////////////////////////////,4
Animator.applyRootMotion,4
pickup,4
fixed,3
equal,3
above,3
max,3
place,3
after,3
jump,3
-GetToPlanetCenter(),3
camera's,3
go,3
//must,3
adding,3
null),3
!=,3
135),3
\print("\Angle\,3
system,3
It,3
CurrentMenu,3
difficulty,3
true,3
when,3
kill,3
Apply,3
min,3
self,3
draw,3
longer,3
have,3
forceDirection,3
2,3
instead,3
print(gameObject.name,3
axes,3
push,3
each,3
Debug.Log,3
(STATES)GetState());,3
negative,3
ray,3
them,3
projectedVelocity,3
modified,3
scale,3
choose,3
cast,3
input,3
evaluate,3
Color.red);,3
we've,3
offset,3
calculating,3
//Vector3,3
45),3
FindDirectionToPlayer(),3
within,3
int,3
isn't,3
RechargeTimer,3
\0,\,3
towards,3
perform,3
last,3
case,3
initialize,3
\area,\,3
HUD.cs,3
180),3
player's,3
\print("\infinite\,3
first,3
Time.deltaTime));,3
calls,3
\loop"\);\,3
Called,3
nextAssumedPosition,3
base,3
them),3
depending,3
HIDDEN,3
all,3
this.FacingVector);,3
\"\'s\,3
nextCorrectPosition,3
every,3
animate,3
\instead,\,3
To,3
spawn,3
\in,\,3
relate,3
time,3
responcible,3
stateEnum);,3
normal,3
(in,2
0.1f,2
warned,2
AI,2
editor,2
moving,2
then,2
NOTE:,2
around,2
print(moveVec);,2
plane,2
obect,2
note,2
load,2
stretch,2
Player1Data.Player1DataObject.UpdateAmmo(this.Worth);,2
reference,2
\awayFromPlanetoid,\,2
torwards,2
newVelocity,2
assets,2
Check,2
bool,2
future,2
self-relative,2
rotational,2
\Vector3(0f,\,2
needed,2
gizmos,2
//start,2
Low,2
death,2
Planetoid,2
it's,2
probably,2
park,2
affect,2
holding,2
vacuum,2
raiders,2
\AnimateMenuScale(GameObject,\,2
zero,2
store,2
MouseCursor,2
also,2
over,2
found,2
enable,2
pause,2
effect,2
gameObject,2
PlayerCam.GetComponent<CameraController>();,2
than,2
already,2
work,2
GameObject),2
color,2
target),2
another,2
TurnAmount;,2
5,2
specific,2
Whether,2
location,2
this.gameObject.GetComponent<Shoot>().IsDisabled,2
if(this.gameObject.GetComponent<MovementController>(),2
moveVec;,2
has,2
collider,2
i,2
IsBeingSuctioned,2
CameraController,2
synonymous,2
everything,2
audio,2
convert,2
\print("\Color\,2
PauseMenu,2
RespectPlanetoid.cs,2
ability,2
Debug,2
From,2
Make,2
top,2
Tells,2
DestroyObject(GameObject),2
Slider),2
(and,2
Time.deltaTime);,2
nextToPlanetCenter,2
end,2
CameraControl;,2
string),2
bools,2
CameraControl,2
\result.point,\,2
//Curving,2
suctioning,2
visualization,2
because,2
transform.LookAt(transform.position,2
vertical,2
\tempHeight,\,2
We,2
status,2
\wants,\,2
value_,2
\case,\,2
scaling,2
Initialize,2
they,2
Animator,2
controls,2
break;,2
modification,2
Handle,2
warning,2
transform.position;,2
(difference),2
</summary>,2
\Vector3(0,\,2
flash,2
\hey,\,2
trajectory,2
Rotate,2
this.transform.up),2
Information:,2
//disable,2
us,2
\print("\Changing\,2
extra,2
//180,2
360,2
gained):,2
Speed;,2
public,2
radial,2
SphericalForward,2
threshold_;,2
setting,2
awareness,2
applicable,2
rid,2
//update,2
Do,2
180f),2
size,2
points,2
form,2
accounting,2
<summary>,2
times,2
volume,2
\Input.GetAxis("\Mouse\,2
Vector3.zero;,2
exception,2
what,2
find,2
would,2
+=,2
OTHER,2
fire,2
scenes,2
small,2
\transform.RotateAround(Target.transform.position,\,2
GetComponent<Rigidbody>().velocity,2
area,2
by,2
1,2
much,2
msg);,2
upon,2
wander,2
SuctionTimer,2
Applying,2
obstacle,2
multiple,2
this.IsDisabled,2
\up,\,2
SphericalUp);,2
Calculating,2
Setting,2
good,2
slider,2
do,2
again,2
send,2
0;,2
user,2
meteor,2
chase,2
Planet:,2
State,2
parts,2
bounds,2
which,2
msg),2
\(Vector3.Angle(contactPoint.normal,\,2
parent,2
HERE,2
Player1DataObject,2
//Get,2
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////,2
objects,2
moveX);,2
\1f,\,2
others,2
event,2
against,2
3,2
Vector3.Cross(new,2
whether,2
Draws,2
transform.position,2
\assets,\,2
A,2
Stop,2
cylinder,2
threshold,2
System.Windows;,1
PRIORITY,1
[RequireComponent,1
this.ParticleSystem,1
never,1
mass,1
StunUpdate(),1
//normals,1
f(c*x),1
transform.TransformDirection(new,1
\f(x),\,1
awayFromPlanet);,1
delay,1
(MostRecentEventObject_.GetComponent<EventRaiders>(),1
((1,1
GetGoal(),1
path,1
\suctioning,\,1
\HUDElementScaler(GameObject,\,1
\\"\MainCamera\"\,\,1
measured,1
begin,1
ForceSphere.cs,1
BehaviorFlee.cs,1
animations,1
moveVec.Normalize();,1
\influence,\,1
shake),1
\"\height"\\,1
LookAt(Vector3,1
Debug.DrawRay(GetAdjustedHeight(),1
this.ParticleSystem.particles,1
using,1
\radius,\,1
stateEnum),1
TraverseBackwardInArray(),1
VacuumCollider.cs,1
\scaleMax.y),\,1
EventPassingComet;,1
\(Mathf.Pow(this.DistanceFromTarget,\,1
this.OriginalPos,1
\GameObject.FindWithTag("\HUD"\).GetComponent<HUD>().UpdateHUDElementFromData("\health"\,\,1
17,1
-nextToPlanetCenter).normalized,1
HeightFromCenter);,1
GetGroundStatus(),1
spacefleet,1
FloatDown(),1
\COLLIDER"\);\,1
polar,1
\Shoot!"\);\,1
\print("\Current:\,1
this.CameraSystem.Target.transform.forward;,1
29,1
Assignment,1
DestroyAfterTime.cs,1
Jump(),1
inCone,1
vecToTarg);,1
behavior,1
\Debug.Log("\SCALING\,1
supernova,1
IncreaseHealth(float),1
Destroy(detailObject);,1
\print("\OnMsg:\,1
0.5f)),1
PauseSystem.cs,1
compare,1
SetGoal(Vector3,1
off,1
Debug.LogError(this.gameObject,1
pressed,1
API,1
hard,1
Vacuum.cs's,1
outer,1
//Depends,1
TogglePauseMenu(),1
tagged,1
allEnemies.Length;,1
\suctioned,\,1
storm,1
\compressing,\,1
ButtonController.cs,1
thing,1
FireButton,1
HorizontalRotation,1
try,1
compensate,1
\GameObject.FindGameObjectsWithTag("\Enemy"\);\,1
this.DetailObjectColorOffset);,1
USER,1
(PickUpTypeEnum.VACUUM):,1
Target.transform.TransformDirection(StartingOffset);,1
\ApplyKnockback(float,\,1
Awake(),1
ForceCylinder.cs,1
\Target.transform.position,\,1
0);,1
Dt,1
cooldown,1
comet,1
\AnimateMenuOut(GameObject,\,1
maximum,1
StartGameCountdown.cs,1
CameraController.cs,1
enemy,1
DestructiveConfirmation.cs,1
(ToPlanetCenter);,1
automatically,1
Drag,1
FreezeUpdate(),1
features,1
SetState(int,1
\controls."\);\,1
\Vector3(Random.Range(scaleMin.x,\,1
projectedVelocity;,1
\print("\Next:\,1
Debug.DrawLine(GetAdjustedHeight(),1
list,1
nextAssumedPosition;,1
Move,1
likely,1
ApplyDamageScaler(),1
TOP,1
\Y"\)\,1
\Random.Range(scaleMin.z,\,1
\UpdateHUD(Text,\,1
current,1
rotate,1
child,1
flow,1
population,1
scene,1
leave,1
(GroundNormal);,1
this.CameraSystem.Target.GetComponent<PlayerController>(),1
CameraSystem.cs,1
this.FacingVector,1
\graph,\,1
this.Speed));,1
this.DebugDrawing();,1
one,1
CreateMessage(GameObject),1
surpassed,1
ParticleAttactor.cs,1
flee,1
jumping,1
colletion,1
nextAssumedPosition);,1
Move.cs,1
DamageEffects.cs,1
GetLASTState,1
PickUp.cs,1
foreach(ContactPoint,1
SHIFT,1
RotatePickUp(),1
MIN,1
\high!"\);\,1
stopped,1
there,1
\bottom,\,1
collisionInfo_.contacts),1
MostRecentEventObject_.GetComponent<EventRaiders>().Difficulty,1
heal,1
\Debug.Log("\MAXDISTANCE\,1
collection,1
Max,1
\VerticalRotation,\,1
\CurrentMenu,\,1
hit,1
this.MaxDistancePos,1
EvalulateHealth(float),1
variables,1
Checks,1
Waypoints,1
\Quaternion.AngleAxis(HorizontalAngle,\,1
\DamageEffectCheck(DamageEffect,\,1
later,1
this.MaxDistance,1
SuctionTarget.cs,1
under,1
EventMeteorShower.cs,1
\this.Gun.transform.up,\,1
\print("\Offset:\,1
nextAssumedPosition).normalized;,1
\Debug.Log("\Cannot\,1
this.ToPlanetCenter.normalized),1
warfront,1
OnMessage(int,1
\1),\,1
define,1
nextVelocityPoint,1
toggle-able,1
HorizontalAngle,1
\ACTIVE!"\);\,1
\Vector3(1,\,1
SpawnObjectsAfterTime.cs,1
InternalMessage(string,1
this.transform.LookAt(this.transform.position,1
\this,\,1
Y,1
transform.rotation,1
(ParticleSystem)(this.ParticleObject.GetComponent(typeof(ParticleEmitter)));,1
connect,1
CreateVacuumObject(),1
\rotationVec,\,1
less,1
\Debug.Log("\HUDEFFECTS\,1
JumpPower,1
EventSpacefleetWarfront;,1
avoidance,1
-Target.GetComponent<PlayerController>().ToPlanetCenter),1
monster,1
heightOffset,1
freeze,1
UpdateLoot(int),1
boomLength;,1
countdown,1
\GameObject.FindWithTag("\HUD"\).GetComponent<HUD>().UpdateHUDElementFromData("\ammo"\,\,1
tentacle,1
HorizontalAngle);,1
\10f),\,1
GetState,1
values,1
timed,1
allow,1
GetAdjustedHeight(),1
Player1Data.Player1DataObject.Ammo);,1
horizontalAngle,1
\Vector3.ProjectOnPlane(velocity,\,1
\Debug.Log("\CURRENT\,1
attached,1
reverse,1
Color.yellow);,1
(moveVec.magnitude,1
5f));,1
this.Gun.transform.forward);,1
camera-relative,1
scaleMax.z));,1
GetLastState(),1
FindNearestWithTag(string,1
\RollCredits(GameObject,\,1
contactPoint.normal;,1
CanPlayerUseSuction(float),1
angles,1
Mathf.Sqrt(Speed));,1
Jump,1
\SortArrayByName(GameObject,\,1
DistanceFromPlanetoidCenter,1
\0.35f,\,1
\HUDEffects(string,\,1
lifetime,1
IsCritical,1
raider_audio.cs,1
radians,1
their,1
azimuth,1
orient,1
sort,1
modifies,1
placement,1
timers,1
\90,\,1
this.transform.position;,1
IsSuctioning,1
(-nextToPlanetCenter,1
even,1
able,1
MoveSpeed,1
\tag,\,1
this.FreezeDuration,1
single,1
record,1
10);,1
fun,1
/detailObject.transform.localScale,1
2)));,1
cameraUp),1
alphabetical,1
adjustment,1
(Planet.transform.position,1
perfrom,1
//Move,1
\Vector3.Lerp(this.Particles[i].position,\,1
stay,1
orientation,1
OnUpdate(int,1
\Debug.Log("\Player\,1
\Mathf.Pow(this.CameraDistance,\,1
material,1
lastly,1
\Debug.Log("\SHAKING\,1
Player1Data.Player1DataObject);,1
\Debug.DrawRay(GetAdjustedHeight(),\,1
increment,1
\scale,\,1
\top,\,1
PlayerCam;,1
\5f,\,1
\transform.Rotate(Quaternion.AngleAxis(HorizontalAngle,\,1
[HideInInspector],1
GetState(),1
hole,1
remains,1
ClampHealth(float),1
GameObject[],1
PopulatePlanet.cs,1
actively,1
determine,1
\Debug.Log("\CREATING\,1
Camera,1
\0),\,1
InwardForce:,1
Inaccuracy,1
needs,1
Debug.DrawLine(goal,1
force:,1
doing,1
ResetDurationsAndTimers(),1
EnemyShoot.cs,1
Debug.Log(this.Timer);,1
highlighted,1
255;,1
normals,1
\camera,\,1
just,1
access,1
centeral,1
visualise,1
Orient,1
2f);,1
Shoot.cs,1
*=,1
awkward,1
starting,1
instead:,1
\ApplyIncrementalForceToSuctionTarget(GameObject,\,1
0.25f;,1
ship,1
sfx,1
black,1
transform.forward,1
ShootWeapon(),1
\moveVec,\,1
print(angle);,1
WorldAnchor.cs,1
\goal"\);\,1
60f);,1
(needed,1
ScriptTester_HP.cs,1
(RespectPlanetoid))],1
this.CameraDistance,1
GetComponent<Animator>();,1
animation,1
bottom,1
\print("\Initializing"\);\,1
sadly,1
it),1
ToggleHowToPlay(bool),1
23,1
vecToTargProjected);,1
MenuController,1
things,1
gameObject's,1
sight,1
\ApplyPoison(float,\,1
acceleration,1
this.Particles;,1
VacuumObject,1
yet,1
raise,1
this.Particles.GetUpperBound(0);++i),1
this.Particles,1
this.MinDistance);,1
\Idle"\);\,1
exist,1
CreateObjectsOnDestroy.cs,1
\(Physics.CheckSphere(detailObject.transform.position,\,1
gameobjects,1
ToPlanetCenter).normalized;,1
faceDirection,1
ToggleMouseCursor(),1
wormhole,1
\surface,\,1
LineOfSight(GameObject,1
\maxRotate,\,1
LoadLevel(string),1
simpler,1
top-most,1
spawned,1
horizon,1
LoadImage(string),1
-Target.GetComponent<PlayerController>,1
attempt,1
this.Rotation,1
CreditsScroller.cs,1
your,1
11,1
Target.transform.up);,1
(40,1
Bullet,1
factor,1
\Debug.Log("\ORIGINAL\,1
The,1
PreviousMenu,1
string,1
break,1
Monobehaviour,1
awayFromPlanetoid,1
impact,1
\spot,\,1
/=,1
now,1
ANIMATION,1
DontDestroyOnLoad(this.gameObject);,1
(Mathf.Pow((1/this.Damping),1
print(this.VerticalDistanceFromTarget);,1
\(ShotDelay)"\);\,1
MenuController.cs,1
GetToPlanetCenter(),1
stupid,1
transform.position);,1
Color.blue);,1
EventManager.cs,1
respect,1
\Vector3(0,StartingOffset.y,\,1
\but,\,1
CreateMenu(GameObject),1
Bullet.cs,1
\lost'em,\,1
separate,1
DEPENDENCY,1
planets,1
TempStartGame.cs,1
this.MinDistancePos);,1
MeteorLogic.cs,1
sqrt(,1
property,1
at-range,1
solve,1
allEnemies,1
7,1
null,1
MessageManager.cs,1
\lifetime,\,1
\InternalMessage("\Arrived"\)\,1
line,1
range,1
pan,1
2.0f);,1
hacking,1
((this.ForceStrength,1
epicness,1
avoid,1
Animator;,1
currentSpeed,1
Enemy,1
limit,1
(Input.GetKey(KeyCode.Space)),1
print(AngleDiffY);,1
ToggleMainMenuConfirmation(bool),1
AwardPlayer(GameObject),1
JustDestroyed();,1
blinking,1
\Wander"\);\,1
angleTowardPlanet));,1
move/shoot,1
SetHealthToValue(float),1
\AnimateMenuIn(GameObject,\,1
\drag,\,1
\print("\METEORS"\);\,1
reload,1
increase,1
rigidbody,1
().ToPlanetCenter;,1
BehaviorExample.cs,1
SetObjectOrientationEqualToPlanetoid(),1
\Vector3.Angle(vecToTargProjected,\,1
\(moveX,\,1
this.CurrentPos);,1
only,1
\vecToTarg,\,1
(float)20;,1
Max:,1
script,1
\Color.grey,\,1
THE,1
colorMax);,1
\Quaternion.AngleAxis(AngleDiffX,\,1
DampingMultiplier,1
nearing,1
DampingMultiplier);,1
-vecToCamera;,1
orbit,1
),1
Can,1
own,1
Player1Data.cs,1
Property,1
or:,1
pest_audio.cs,1
ammo,1
ApplyFreeze(float),1
ApplyDamageScaler(float),1
Speed,1
Special,1
\Quaternion.AngleAxis(AngleDiffY,\,1
reaches,1
cosmic,1
SetMinMaxDistance(),1
drawing,1
\Debug.DrawLine(result,\,1
MINDISTANCE,1
Away,1
NOTES:,1
\Planetoid,\,1
radians),1
stretching,1
UpdateAmmo(int),1
this.Damping),1
unpause,1
LEFT,1
arrival;,1
\CenterOffset),\,1
projected,1
BroadcastMessage(string,1
reduce,1
compression,1
component,1
this.Planet,1
Third,1
met,1
MAX,1
InitializeHUD(),1
\yet,\,1
newVelocity.normalized,1
LockTo.cs,1
loot,1
\print("\OnUpdate"\);\,1
BY,1
(typeof,1
person,1
VerticalAngle,1
obj_.gameObject.name);,1
creation,1
DestroyPreviousMenu(),1
\"\vertical"\\,1
stop,1
influence,1
passing,1
\print("\setting\,1
Debug.LogWarning(,1
worry,1
NOT,1
inSightCone,1
Target.transform.up),1
Movement,1
2(mass)(acceleration),1
false,1
angleAwayFromPlanet);,1
10),1
ShotDelay,1
this.DetailObjectColorOffset,1
//,1
inherit,1
initial,1
\print("\OnExit"\);\,1
randomly,1
sent,1
etc,1
DecreaseHealth(float),1
\Debug.DrawLine(GetAdjustedHeight(),\,1
next,1
OnInit();,1
OnTriggerEnter(Collider),1
Aughstone,1
(int,1
\SphericalUp,\,1
1f),1
\posOnSurface,\,1
script),1
\print("\OnEnter"\);\,1
creation/bigbang,1
EventTentacleMonster;,1
>,1
helper,1
PlayerController.cs,1
this.CameraSystem.Planetoid.transform.position,1
CameraShake.cs,1
this.VacuumObject.transform.LookAt(this.VacuumObject.transform.position,1
collision,1
Planet.transform.position,1
BehaviorChase.cs,1
\X"\)\,1
\scaleMax.x),\,1
combining,1
layered,1
sun,1
logical,1
creatures,1
BUTTON,1
ShotTimer,1
\Debug.Log("\COLLISION\,1
CurrentDifficulty_;,1
old,1
Astar,1
components,1
-ToPlanetCenter);,1
\"\Warning:\,1
\player,\,1
previous,1
been,1
front,1
GetTimeInState(),1
this.PlanetNumoroTwo;,1
view,1
MenuSystemCanvas,1
\newVelocity,\,1
incoming,1
stateEnum,1
you,1
where,1
\Vector3.RotateTowards(transform.forward,\,1
known,1
Health.cs,1
SphericalRight,1
InGameMessageSystem.cs,1
\Vector3.ProjectOnPlane(moveVec,\,1
destination,1
13,1
\this.transform.position,\,1
text,1
OnEnter(int,1
\ApplyExplosion(float,\,1
BasicController.cs,1
equation,1
(float)3;,1
higher,1
perpendicular,1
QuitGame(),1
damaged,1
being,1
floating,1
z-axis,1
if(Input.GetKeyDown(KeyCode.M)),1
TogglePause(),1
positions,1
///////////////////////////////////,1
CameraShake(),1
near,1
Find,1
\180;//Vector3.Angle(Target.transform.forward,\,1
FUNCTIONS,1
Debug.DrawLine((transform.position,1
squareroot,1
AustonLindsay,1
AnimateCountdown(string),1
PROPERITES,1
Vector3.Slerp(transform.forward,1
Gravity,1
EventCallCheat.cs,1
DETECTED,1
Vacuum.cs,1
FloatUp(),1
PoisonUpdate(),1
transform.up,1
(PickUpTypeEnum.HEALTH):,1
order,1
\exists,\,1
ApplyStun(float),1
this.ParticleSystem.;,1
velocity.magnitude;,1
EnemyMovement.cs,1
NORMAL,1
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////,1
establish,1
\UpdateHUDElement(Text,\,1
(bullet,1
StressManager.cs,1
ParentNewMenu(GameObject),1
pressing,1
colorMin);,1
this.DistanceFromTarget));,1
EvaluateCountdown(),1
(transform.forward,1
CurrentPopulation,1
off-screen,1
otherwise,1
OnTriggerEnter(),1
DEFINED,1
SphericalCoords.cs,1
\(Vector3.Angle(normals.normalized,\,1
Don't,1
(this.ForceStrength,1
\difficulty,\,1
c,1
TraverseForwardInArray(),1
more,1
Min:,1
these,1
Populates,1
instance,1
\Random.Range(scaleMin.y,\,1
inclined,1
ended,1
CanPlayerShoot(),1
VerticalAngle);,1
DestroyMenu(GameObject),1
OnTriggerExit(Collider),1
clips,1
\range,\,1
ToggleQuitGameConfirmation(bool),1
ToPlanetCenter);,1
this.Particles[i].position,1
\stateEnum,\,1
\ApplyInitialForceToSuctionTarget(GameObject,\,1
\bounds,\,1
\45,\,1
this.TogglePauseMenu(false);,1
\outside,\,1
raycast,1
\goalOnSurface,\,1
(IsGrounded);,1
ScalerType,1
pressin,1
AI_Base,1
requires,1
HUDElementReset(GameObject),1
-moveVec,1
\low!"\\,1
(Target.transform.up,1
\stuck,\,1
\Quaternion.LookRotation(awayFromPlanetoid,\,1
primes:,1
Record,1
Color.magenta);,1
\ELEMENT!"\);\,1
CamRodTest.cs,1
gun,1
MinimizeTest.cs,1
close,1
take,1
DebugDrawing(),1
OnDestroy(),1
\radians),\,1
//Find,1
stun,1
Properties,1
solving,1
verticalAngle,1
BlinkOriginal(color),1
this.TogglePauseMenu(true);,1
-=,1
smaller,1
0.003f;,1
-moveVec;,1
(nextCorrectPosition,1
GetLastPosition(),1
\down,\,1
obstacles,1
this.Rotation;,1
IMPORTANT:,1
\CAMERA"\);\,1
(velocity,1
behaviors,1
contactPoint,1
\135,\,1
19,1
ApplyIncrementalForceToSuctionTarget(),1
\this.DistanceFromTarget,\,1
Planet.transform.position),1
shoudl,1
de-aggro,1
\RespectPlanetoid.cs"\);\,1
(-Target.transform.forward,1
implements,1
Lindsey,1
0.5f))),1
LoadNewMenu(string),1
\print("\RAIDERS"\);\,1
This,1
this.StunDuration,1
drag),1
transform.LookAt(this.transform.position,1
allowed,1
dead,1
VACUUM,1
f(x/c),1
//FUNCTION,1
please,1
(ForceStrength,1
MenuSwitcher.cs,1
BlinkCritical(color),1
\print("\Away\,1
\target,\,1
OnExit(int,1
AI_Base.cs,1
assignment,1
\180,\,1
level,1
goal,1
cameraRight),1
dumb,1
print(this.transform.InverseTransformDirection(this.Rotation.eulerAngles));,1
always,1
CameraAnchor.cs,1
zone,1
slightly,1
horizontal,1
reserved,1
print(AngleDiffX);,1
creature,1

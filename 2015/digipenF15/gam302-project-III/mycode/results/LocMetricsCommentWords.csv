Word,Count
/////////////////////////////////////////////////////////////////////////,240
//FUNCTION:,101
//NOTE:,89
the,81
-,72
not,68
used,61
but,60
to,47
assigned,42
variable,41
of,39
=,38
this,27
+,23
Institute,22
Technology,22
//SCRIPT,22
//COPYRIGHT,22
//AUTHOR,22
Â©2015,22
DigiPen,22
Travis,21
Moore,21
private,20
declared,20
field,20
PROPERTIES,18
\"\\,17
Start(),17
if,16
set,15
is,14
object,13
get,13
update,11
DEBUG,10
we,10
health,10
Update(),10
that,8
a,8
true;,8
and,8
on,8
new,7
timer,7
we're,7
reset,7
CODE,6
assign,6
ClampHealth(),6
FUTURE,6
hud,6
see,6
/////////////////////////////////////////////////////////////////////////////,6
from,6
NEEDED,6
for,6
call,6
Vector3,6
height,6
check,6
menu,6
this.gameObject.GetComponent<MovementController>().IsDisabled,6
*,6
player,6
Vector3),5
position,5
be,5
button,5
float),5
in,5
\Vector3,\,5
HUD,5
destroy,5
//PURPOSE:,5
original,5
disabled,5
correct,5
keep,5
game,5
down,5
apply,5
make,5
once,4
\Debug.Log("\value_\,4
value_);,4
false;,4
\float,\,4
vector,4
pos,4
before,4
suction,4
POS,4
CurrentHP,4
object's,4
ensure,4
start,4
toggle,4
conversion,4
frame,4
create,4
damage,4
DestroyOwner(),4
pickup,4
Calls,4
distance,3
true,3
Update,3
nextCorrectPosition,3
first,3
called,3
CurrentMenu,3
kill,3
FindDirectionToPlayer(),3
right,3
planetoid,3
max,3
per,3
HUD.cs,3
evaluate,3
within,3
it,3
at,3
projectedVelocity,3
need,3
initialize,3
after,3
based,3
animate,3
move,3
value,3
bullet,3
scale,3
RechargeTimer,3
so,3
an,3
&,3
min,3
can,3
HIDDEN,3
nextAssumedPosition,3
//Vector3,3
float,3
we've,3
//Curving,2
Player1Data.Player1DataObject.UpdateAmmo(this.Worth);,2
applicable,2
holding,2
//update,2
setting,2
case,2
Get,2
//disable,2
value_,2
GetComponent<Rigidbody>().velocity,2
relative,2
Speed;,2
than,2
Animator.applyRootMotion,2
SuctionTimer,2
GameObject),2
gained):,2
another,2
points,2
load,2
has,2
torwards,2
color,2
direction,2
RespectPlanetoid.cs,2
ability,2
if(this.gameObject.GetComponent<MovementController>(),2
future,2
perform,2
parent,2
(and,2
nextToPlanetCenter,2
end,2
collider,2
vacuum,2
are,2
all,2
Player1DataObject,2
MouseCursor,2
enable,2
already,2
null),2
bools,2
does,2
HERE,2
this.gameObject.GetComponent<Shoot>().IsDisabled,2
!=,2
trajectory,2
IsBeingSuctioned,2
},2
up,2
\up,\,2
everything,2
needed,2
convert,2
PauseMenu,2
this.IsDisabled,2
offset,2
size,2
place,2
camera,2
accounting,2
Planetoid,2
DestroyObject(GameObject),2
Slider),2
pause,2
OTHER,2
flash,2
above,2
planet,2
newVelocity,2
death,2
upon,2
break;,2
{,2
transform.position;,2
extra,2
//start,2
obect,2
threshold_;,2
again,2
point,2
bounds,2
calls,2
\AnimateMenuScale(GameObject,\,2
//Get,2
equal,2
it's,2
rid,2
Initialize,2
volume,2
character,2
will,2
transform.position,2
//////////////////////////////////////////////////////////////////////////////,2
threshold,2
would,2
fire,2
string),2
zero,2
suctioning,2
sure,2
effect,2
slider,2
have,2
force,2
return,2
shake),1
begin,1
\HUDElementScaler(GameObject,\,1
VacuumCollider.cs,1
this.OriginalPos,1
\suctioning,\,1
-nextToPlanetCenter).normalized,1
transform.TransformDirection(new,1
velocity,1
\print("\Current:\,1
StunUpdate(),1
never,1
[RequireComponent,1
PRIORITY,1
find,1
\Debug.Log("\SCALING\,1
3,1
PauseSystem.cs,1
off,1
main,1
pressed,1
delay,1
animations,1
ButtonController.cs,1
TraverseBackwardInArray(),1
FireButton,1
compensate,1
(PickUpTypeEnum.VACUUM):,1
\ApplyKnockback(float,\,1
Awake(),1
\GameObject.FindWithTag("\HUD"\).GetComponent<HUD>().UpdateHUDElementFromData("\health"\,\,1
\AnimateMenuOut(GameObject,\,1
maximum,1
HeightFromCenter);,1
enemy,1
DestructiveConfirmation.cs,1
player's,1
automatically,1
projectedVelocity;,1
\print("\Next:\,1
FloatDown(),1
nextAssumedPosition;,1
Move,1
ApplyDamageScaler(),1
TOP,1
\UpdateHUD(Text,\,1
current,1
child,1
scaling,1
\COLLIDER"\);\,1
this.DebugDrawing();,1
one,1
CreateMessage(GameObject),1
surpassed,1
colletion,1
DamageEffects.cs,1
RotatePickUp(),1
MIN,1
stopped,1
there,1
heal,1
\Debug.Log("\MAXDISTANCE\,1
collection,1
\CurrentMenu,\,1
this.MaxDistancePos,1
initialization,1
variables,1
\Shoot!"\);\,1
Assignment,1
IncreaseHealth(float),1
Debug.LogError(this.gameObject,1
later,1
this.MaxDistance,1
Vacuum.cs's,1
TogglePauseMenu(),1
\suctioned,\,1
nextVelocityPoint,1
\ACTIVE!"\);\,1
thing,1
Dt,1
StartGameCountdown.cs,1
FreezeUpdate(),1
go,1
\Vector3(0,\,1
rotate,1
less,1
\Debug.Log("\HUDEFFECTS\,1
this.Speed));,1
heightOffset,1
nextAssumedPosition);,1
\GameObject.FindWithTag("\HUD"\).GetComponent<HUD>().UpdateHUDElementFromData("\ammo"\,\,1
because,1
values,1
allow,1
\Vector3.ProjectOnPlane(velocity,\,1
\Debug.Log("\CURRENT\,1
reverse,1
PickUp.cs,1
store,1
hit,1
EvalulateHealth(float),1
Checks,1
Mathf.Sqrt(Speed));,1
\DamageEffectCheck(DamageEffect,\,1
DistanceFromPlanetoidCenter,1
\HUDEffects(string,\,1
into,1
IsCritical,1
SuctionTarget.cs,1
sort,1
placement,1
timers,1
\0,\,1
(-nextToPlanetCenter,1
our,1
nextAssumedPosition).normalized;,1
fun,1
\Debug.Log("\Cannot\,1
assets,1
alphabetical,1
\this,\,1
(Planet.transform.position,1
perfrom,1
orientation,1
connect,1
material,1
lastly,1
\Debug.Log("\SHAKING\,1
Player1Data.Player1DataObject);,1
increment,1
\scale,\,1
CreateVacuumObject(),1
freeze,1
inside,1
UpdateLoot(int),1
ClampHealth(float),1
actively,1
\Debug.Log("\CREATING\,1
countdown,1
doing,1
access,1
Player1Data.Player1DataObject.Ammo);,1
Shoot.cs,1
\RollCredits(GameObject,\,1
\ApplyIncrementalForceToSuctionTarget(GameObject,\,1
sfx,1
ShootWeapon(),1
(needed,1
ScriptTester_HP.cs,1
(RespectPlanetoid))],1
animation,1
CanPlayerUseSuction(float),1
\SortArrayByName(GameObject,\,1
MenuController,1
should,1
raise,1
IsSuctioning,1
exist,1
gameobjects,1
ToggleMouseCursor(),1
Auston,1
even,1
<=,1
this.FreezeDuration,1
//Move,1
CreditsScroller.cs,1
also,1
\Debug.Log("\Player\,1
Use,1
gameObject,1
\Debug.Log("\ORIGINAL\,1
0.1f,1
\spot,\,1
normal,1
ANIMATION,1
DontDestroyOnLoad(this.gameObject);,1
ResetDurationsAndTimers(),1
\(ShotDelay)"\);\,1
transform.position);,1
CreateMenu(GameObject),1
Debug.Log(this.Timer);,1
separate,1
TempStartGame.cs,1
highlighted,1
ToggleHowToPlay(bool),1
things,1
property,1
null,1
gameObject's,1
\ApplyPoison(float,\,1
range,1
VacuumObject,1
yet,1
this.MinDistance);,1
LoadLevel(string),1
Time.deltaTime);,1
ToggleMainMenuConfirmation(bool),1
AwardPlayer(GameObject),1
LoadImage(string),1
found,1
sample,1
PreviousMenu,1
now,1
MenuController.cs,1
rigidbody,1
stupid,1
Lindsay,1
Bullet.cs,1
DEPENDENCY,1
this.MinDistancePos);,1
they,1
epicness,1
THE,1
currentSpeed,1
Can,1
Player1Data.cs,1
Property,1
limit,1
ammo,1
ApplyFreeze(float),1
blinking,1
Speed,1
move/shoot,1
MINDISTANCE,1
SetHealthToValue(float),1
UpdateAmmo(int),1
unpause,1
reduce,1
\AnimateMenuIn(GameObject,\,1
reload,1
MAX,1
transform.LookAt(transform.position,1
\yet,\,1
ray,1
loot,1
SetObjectOrientationEqualToPlanetoid(),1
(typeof,1
with,1
this.CurrentPos);,1
creation,1
only,1
script,1
own,1
ApplyDamageScaler(float),1
SetMinMaxDistance(),1
\Planetoid,\,1
component,1
ShotDelay,1
met,1
negative,1
OnTriggerEnter(Collider),1
Aughstone,1
InitializeHUD(),1
newVelocity.normalized,1
obj_.gameObject.name);,1
DestroyPreviousMenu(),1
CameraShake.cs,1
by,1
Planet.transform.position,1
BUTTON,1
ShotTimer,1
\Debug.Log("\COLLISION\,1
old,1
false,1
DecreaseHealth(float),1
don't,1
do,1
been,1
small,1
script),1
\newVelocity,\,1
1,1
Health.cs,1
logical,1
text,1
good,1
\ApplyExplosion(float,\,1
higher,1
QuitGame(),1
damaged,1
being,1
TogglePause(),1
CameraShake(),1
Find,1
previous,1
MenuSystemCanvas,1
parts,1
AnimateCountdown(string),1
InGameMessageSystem.cs,1
shoot,1
base,1
DETECTED,1
Vacuum.cs,1
floating,1
(PickUpTypeEnum.HEALTH):,1
\exists,\,1
velocity.magnitude;,1
establish,1
\UpdateHUDElement(Text,\,1
(bullet,1
ParentNewMenu(GameObject),1
back,1
EvaluateCountdown(),1
off-screen,1
transform,1
OnTriggerEnter(),1
Don't,1
PROPERITES,1
FloatUp(),1
TraverseForwardInArray(),1
these,1
instance,1
PoisonUpdate(),1
against,1
CanPlayerShoot(),1
order,1
DestroyMenu(GameObject),1
ApplyStun(float),1
ToggleQuitGameConfirmation(bool),1
ToPlanetCenter);,1
\bounds,\,1
NORMAL,1
pressing,1
ScalerType,1
pressin,1
requires,1
HUDElementReset(GameObject),1
(transform.forward,1
\ELEMENT!"\);\,1
note,1
gun,1
DebugDrawing(),1
//Find,1
otherwise,1
Properties,1
send,1
ended,1
this.TogglePauseMenu(true);,1
smaller,1
0.003f;,1
OnTriggerExit(Collider),1
\ApplyInitialForceToSuctionTarget(GameObject,\,1
this.TogglePauseMenu(false);,1
or,1
(velocity,1
ApplyIncrementalForceToSuctionTarget(),1
Planet.transform.position),1
stun,1
BlinkOriginal(color),1
Lindsey,1
(nextCorrectPosition,1
IMPORTANT:,1
This,1
this.StunDuration,1
\CAMERA"\);\,1
allowed,1
dead,1
\RespectPlanetoid.cs"\);\,1
//FUNCTION,1
please,1
LoadNewMenu(string),1
BlinkCritical(color),1
VACUUM,1
MenuSwitcher.cs,1
assignment,1
level,1
slightly,1

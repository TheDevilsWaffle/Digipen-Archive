/*//////////////////////////////////////////////////////////////////////////////////////////////////////////
//SCRIPT    - Z_ButtonBounce.z
//AUTHOR    - Travis Moore
//COURSE    - GAM250
//COPYRIGHT - ©2015 DigiPen, All Rights Reserved.
//////////////////////////////////////////////////////////////////////////////////////////////////////////*/
class Z_ButtonBounce:ZilchComponent
{
    //PLAYERS
    var Player1:Cog = null;
    var Player2:Cog = null;
    
    //BOUNCE
    var BouncePad:Cog = null;
    var BounceActiveSprite:SpriteSource = null;
    var BounceInactiveSprite:SpriteSource = null;
    
    //BUTTON
    var Button:Cog = null;
    
    //BUTTON PRESSER (if needed)
    var ButtonPresserObject:CogPath = null;
    var ButtonPresser:Cog = null;
    
    //STATE
    var IsPressed:Boolean = Boolean(false);
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-Initialize()
    //EXPLANATION-initialize variables and event listeners
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function Initialize(init:CogInitializer):Void
    {
        //get the button
        this.Button = this.Owner.Parent;
        
        //set player objects
        this.Player1 = this.Space.FindObjectByName("goPlayer1");
        this.Player2 = this.Space.FindObjectByName("goPlayer2");
        
        //get the object that this button controls
        if(this.Owner.Parent.Z_ButtonType.ButtonControlledObject != null)
        {
            this.BouncePad = this.Owner.Parent.Z_ButtonType.ButtonControlledObject.Cog;
        }
        
        //get the inactive/active sprites ready
        this.BounceActiveSprite = SpriteSource.Find("sprBouncePadActive");
        this.BounceInactiveSprite = SpriteSource.Find("sprBouncePadInactive");
        
        if(this.ButtonPresserObject != null)
        {
            this.ButtonPresser = this.ButtonPresserObject.Cog;
        }
        
        //collision listeners
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionStarted()
    //EXPLANATION- hit a button on the first contact
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionStarted(event:CollisionEvent):Void
    {
        //if not already pressed
        if(!this.IsPressed)
        {
            //ensure who touched the button
            if(event.OtherObject == this.Player1 || event.OtherObject == this.Player2 || event.OtherObject == this.ButtonPresser)
            {
                //DEBUG
                //Console.WriteLine("`event.OtherObject` hit the button!");
                
                //set IsPressed to true (prevent looping)
                this.IsPressed = true;
                
                //call function to animate button being pressed
                this.Button.Z_ButtonType.AnimateButtonPressed();
                
                //allow for bouncing
                this.BouncePad.Z_BouncePad.IsActive = true;
                //swap out the sprite
                this.BouncePad.Sprite.SpriteSource = this.BounceActiveSprite;
            }
        }
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionPersisted()
    //EXPLANATION-continue to hit a button past the first time
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionPersisted(event:CollisionEvent):Void
    {
        //if not already pressed
        if(!this.IsPressed)
        {
            //ensure who touched the button
            if(event.OtherObject == this.Player1 || event.OtherObject == this.Player2 || event.OtherObject == this.ButtonPresser)
            {
                //DEBUG
                //Console.WriteLine("`event.OtherObject` ALREADY hit the button!");
                
                //set IsPressed to true (prevent looping)
                this.IsPressed = true;
                
                //call function to animate button being pressed
                this.Button.Z_ButtonType.AnimateButtonPressed();
                
                //allow for bouncing
                this.BouncePad.Z_BouncePad.IsActive = true;
                //swap out the sprite
                this.BouncePad.Sprite.SpriteSource = this.BounceActiveSprite;
            }
        }
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionEnded()
    //EXPLANATION-button no longer hit
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionEnded(event:CollisionEvent):Void
    {
        //reset IsPressedBoolean
        this.IsPressed = false;
        
        //call function to animate button being depressed
        this.Button.Z_ButtonType.AnimateButtonDepressed();
        
        this.BouncePad.Z_BouncePad.IsActive = false;
        //swap out the sprite
        this.BouncePad.Sprite.SpriteSource = this.BounceInactiveSprite;
    }
}

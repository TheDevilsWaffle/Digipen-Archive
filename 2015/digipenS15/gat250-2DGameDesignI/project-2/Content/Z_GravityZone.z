/*//////////////////////////////////////////////////////////////////////////////////////////////////////////
//SCRIPT    - Z_GravityZone.z
//AUTHOR    - Travis Moore
//COURSE    - GAM250
//COPYRIGHT - ©2015 DigiPen, All Rights Reserved.
//////////////////////////////////////////////////////////////////////////////////////////////////////////*/
class Z_GravityZone:ZilchComponent
{
    //BOOLEAN
    [Property]
    var IsActive:Boolean = Boolean(false);
    
    //PLAYERS
    var Player1:Cog = null;
    var Player2:Cog = null;
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-Initialize()
    //EXPLANATION-initialize variables and event listeners
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function Initialize(init:CogInitializer):Void
    {
        //find the players
        this.Player1 = this.Space.FindObjectByName("goPlayer1");
        this.Player2 = this.Space.FindObjectByName("goPlayer2");
        
        //event listeners for collision detection
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionStarted()
    //EXPLANATION-change the player's gravity if gravity zone is active
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionStarted(event:CollisionEvent):Void
    {
        if(this.Space.LevelSettings.Z_DetectMultiplayer.IsPlayer2Active == false)
        {
            if(this.IsActive && !event.OtherObject.Z_Player1Controller.IsInGravityZone)
            {
                //player is now in gravity zone, set it to true
                event.OtherObject.Z_Player1Controller.IsInGravityZone = true;
                
                if(event.OtherObject.Z_Gravity != null)
                {
                    var playerGravity = event.OtherObject.Z_Player1Controller.IsGravityReversed;
                    playerGravity = !playerGravity;
                    event.OtherObject.Z_Gravity.ToggleGravity();
                }
            }
        }
        else
        {
            if(event.OtherObject == this.Player1)
            {
                if(this.IsActive && !event.OtherObject.Z_Player1Controller.IsInGravityZone)
                {
                    //player is now in gravity zone, set it to true
                    event.OtherObject.Z_Player1Controller.IsInGravityZone = true;
                    
                    if(event.OtherObject.Z_Gravity != null)
                    {
                        var playerGravity = event.OtherObject.Z_Player1Controller.IsGravityReversed;
                        playerGravity = !playerGravity;
                        event.OtherObject.Z_Gravity.ToggleGravity();
                    }
                }
            }
            if(event.OtherObject == this.Player2)
            {
                if(this.IsActive && !event.OtherObject.Z_Player2Controller.IsInGravityZone)
                {
                    //player is now in gravity zone, set it to true
                    event.OtherObject.Z_Player2Controller.IsInGravityZone = true;
                    
                    if(event.OtherObject.Z_Gravity != null)
                    {
                        var playerGravity = event.OtherObject.Z_Player2Controller.IsGravityReversed;
                        playerGravity = !playerGravity;
                        event.OtherObject.Z_Gravity.ToggleGravity();
                    }
                }
            }
        }
    }
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionPersisted()
    //EXPLANATION-change the player's gravity if gravity zone is active
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionPersisted(event:CollisionEvent):Void
    {
        if(this.Space.LevelSettings.Z_DetectMultiplayer.IsPlayer2Active == false)
        {
            if(this.IsActive && !event.OtherObject.Z_Player1Controller.IsInGravityZone)
            {
                //player is now in gravity zone, set it to true
                event.OtherObject.Z_Player1Controller.IsInGravityZone = true;
                
                if(event.OtherObject.Z_Gravity != null)
                {
                    var playerGravity = event.OtherObject.Z_Player1Controller.IsGravityReversed;
                    playerGravity = !playerGravity;
                    event.OtherObject.Z_Gravity.ToggleGravity();
                }
            }
        }
        else
        {
            if(event.OtherObject == this.Player1)
            {
                if(this.IsActive && !event.OtherObject.Z_Player1Controller.IsInGravityZone)
                {
                    //player is now in gravity zone, set it to true
                    event.OtherObject.Z_Player1Controller.IsInGravityZone = true;
                    
                    if(event.OtherObject.Z_Gravity != null)
                    {
                        var playerGravity = event.OtherObject.Z_Player1Controller.IsGravityReversed;
                        playerGravity = !playerGravity;
                        event.OtherObject.Z_Gravity.ToggleGravity();
                    }
                }
            }
            if(event.OtherObject == this.Player2)
            {
                if(this.IsActive && !event.OtherObject.Z_Player2Controller.IsInGravityZone)
                {
                    //player is now in gravity zone, set it to true
                    event.OtherObject.Z_Player2Controller.IsInGravityZone = true;
                    
                    if(event.OtherObject.Z_Gravity != null)
                    {
                        var playerGravity = event.OtherObject.Z_Player2Controller.IsGravityReversed;
                        playerGravity = !playerGravity;
                        event.OtherObject.Z_Gravity.ToggleGravity();
                    }
                }
            }
        }
    }
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnCollisionEnded()
    //EXPLANATION-reset gravity once a player leaves the gravity zone
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnCollisionEnded(event:CollisionEvent):Void
    {
        if(this.Space.LevelSettings.Z_DetectMultiplayer.IsPlayer2Active == false)
        {
            //player is now out of gravity zone, set it to false
            event.OtherObject.Z_Player1Controller.IsInGravityZone = false;
            //restore player's original gravity
            event.OtherObject.Z_Player1Controller.IsGravityReversed = event.OtherObject.Z_Player1Controller.PlayerOriginalGravity;
            event.OtherObject.Z_Gravity.SetGravity(this.Player1, event.OtherObject.Z_Player1Controller.PlayerOriginalGravity);
        }
        else
        {
            if(event.OtherObject == this.Player1)
            {
                //player is now out of gravity zone, set it to false
                event.OtherObject.Z_Player1Controller.IsInGravityZone = false;
                //restore player's original gravity
                event.OtherObject.Z_Player1Controller.IsGravityReversed = event.OtherObject.Z_Player1Controller.PlayerOriginalGravity;
                event.OtherObject.Z_Gravity.SetGravity(this.Player1, event.OtherObject.Z_Player1Controller.PlayerOriginalGravity);
            }
            if(event.OtherObject == this.Player2)
            {
                //player is now out of gravity zone, set it to false
                event.OtherObject.Z_Player2Controller.IsInGravityZone = false;
                //restore player's original gravity
                event.OtherObject.Z_Player2Controller.IsGravityReversed = event.OtherObject.Z_Player2Controller.PlayerOriginalGravity;
                event.OtherObject.Z_Gravity.SetGravity(this.Player2, event.OtherObject.Z_Player2Controller.PlayerOriginalGravity);
            }
        }
    }
}

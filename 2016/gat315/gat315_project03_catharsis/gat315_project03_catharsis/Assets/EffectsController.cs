/*////////////////////////////////////////////////////////////////////////
//SCRIPT: EffectsController.cs
//AUTHOR: Travis Moore
//COPYRIGHT: © 2016 DigiPen Institute of Technology, All Rights Reserved
////////////////////////////////////////////////////////////////////////*/

#pragma warning disable 0168 // variable declared but not used.
#pragma warning disable 0219 // variable assigned but not used.
#pragma warning disable 0414 // private field assigned but not used.

using UnityEngine;
using System.Collections;
using UnityStandardAssets.ImageEffects;

public class EffectsController : MonoBehaviour
{
    #region PROPERTIES

    //references
    NoiseAndGrain CamNG;
    ColorCorrectionCurves CamCCC;

    //attributes



    #endregion

    #region INITIALIZATION

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: Start()
    ////////////////////////////////////////////////////////////////////*/
    void Start()
    {
        //CONTENT HERE
        this.CamNG = GetComponent<NoiseAndGrain>();
        this.CamCCC = GetComponent<ColorCorrectionCurves>();
    }

    #endregion

    #region ColorSaturation

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: SetColorSaturation()
    ////////////////////////////////////////////////////////////////////*/
    public void SetColorSaturation(float value_)
    {
        this.CamCCC.saturation = Mathf.Clamp(value_, 0f, 5f);
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: DecreaseColorSaturation()
    ////////////////////////////////////////////////////////////////////*/
    public void DecreaseColorSaturation(float value_)
    {
        this.CamCCC.saturation -= Mathf.Clamp(value_, 0f, 5f);
    }

    #endregion

    #region X_FUNCTIONS

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_01()
    ////////////////////////////////////////////////////////////////////*/
    public void SetNoiseAndGrain(float value_)
    {
        this.CamNG.intensityMultiplier = Mathf.Clamp(value_, 0f, 10f);
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_02()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_02()
    {
        //CONTENT HERE
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_03()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_03()
    {
        //CONTENT HERE
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_04()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_04()
    {
        //CONTENT HERE
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_05()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_05()
    {
        //CONTENT HERE
    }

    #endregion

    #region ANIMATION

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_06()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_06()
    {
        //CONTENT HERE
    }

    /*////////////////////////////////////////////////////////////////////
    //FUNCTION: FUNC_07()
    ////////////////////////////////////////////////////////////////////*/
    void FUNC_07()
    {
        //CONTENT HERE
    }

    #endregion
}